# Generated by Django 5.1.2 on 2024-10-24 09:53

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SuperUsuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('numero_cuenta', models.CharField(max_length=12, primary_key=True, serialize=False, unique=True, verbose_name='Número de cuenta')),
                ('contrasenia_temp', models.CharField(blank=True, max_length=128, null=True)),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre(s)')),
                ('apellido_paterno', models.CharField(max_length=50, verbose_name='Apellido paterno')),
                ('apellido_materno', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apellido materno')),
                ('celular', models.CharField(max_length=10, verbose_name='Número de celular')),
                ('correo', models.EmailField(default='ejemplo@unam.mx', max_length=254, unique=True)),
                ('carrera', models.CharField(choices=[('actuaria', 'Actuaría'), ('biologia', 'Biología'), ('computacion', 'Ciencias de la Computación'), ('ciencias_de_la_tierra', 'Ciencias de la Tierra'), ('fisica', 'Física'), ('fisica_biomedica', 'Física Biomédica'), ('manejo_zonas_costeras', 'Manejo Sustentable de Zonas Costeras'), ('matematicas', 'Matemáticas'), ('matematicas_aplicadas', 'Matemáticas Aplicadas'), ('academico', 'Acádemico Ciencias')], max_length=100, verbose_name='Carrera')),
                ('rol', models.CharField(choices=[('admin', 'Administrador'), ('proveedor', 'Proveedor'), ('usuario', 'Usuario')], max_length=20, verbose_name='Rol')),
                ('tipo_usuario', models.CharField(choices=[('estudiante', 'Estudiante'), ('trabajador', 'Trabajador')], max_length=20, verbose_name='Tipo de usuario')),
                ('groups', models.ManyToManyField(blank=True, related_name='superusuario_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='superusuario_permissions', to='auth.permission')),
            ],
            options={
                'permissions': [('ver_productos', 'Puede ver productos'), ('agregar_producto', 'Puede agregar productos'), ('editar_producto', 'Puede editar productos'), ('eliminar_producto', 'Puede eliminar productos'), ('agregar_usuario', 'Puede añadir usuarios'), ('editar_usuario', 'Puede editar usuarios'), ('eliminar_usuario', 'Puede eliminar usuarios'), ('ver_usuarios', 'Puede ver usuarios'), ('sumar_pumapuntos', 'Puede sumar puma puntos'), ('rentar_producto', 'Puede rentar productos')],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pumapuntos', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
